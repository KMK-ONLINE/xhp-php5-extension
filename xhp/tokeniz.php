#!/usr/bin/php
<?php

if (extension_loaded('xhp')) {
  exit("Please turn off xhp extension\n");
}

$parser_y = 'parser.y';

$fo = fopen($parser_y . '.new', 'w');

$fh = fopen($parser_y, 'r')
    or exit("Error: unable to open file ($parser_y)\n");

$watch_token = true;

$all_tokens = array();
$found_tokens = array();

while (($buf = fgets($fh, 4096)) !== false) {

    if ($watch_token) {
        if (preg_match('/^%(token|left|right|nonassoc)\s+(.*)\s*$/', $buf, $matches)) {
            $rule = $matches[1];
            $tokens = explode(' ', trim($matches[2]));

            if ($rule == 'token') {
                $tok = $tokens[0];
                $all_tokens[$tok] = false;

                if (defined($tok)) {
                    $buf = "%token " . $tokens[0]." ".constant($tok). PHP_EOL;
                    $all_tokens[$tok] = constant($tok);
                }
                if (array_key_exists($tok, $found_tokens)) {
                    unset($found_tokens[$tok]);
                }
            }
            else {
                foreach ($tokens as $tok) {
                    if ($tok[0] != "'") {
                        $found_tokens[$tok] = true;
                    }
                }
            }
        }

        if (preg_match('/^%%\s*$/', $buf)) {

            foreach(array_keys($found_tokens) as $tok) {
                $all_tokens[$tok] = false;
                if (defined($tok)) {
                    $buf = "%token " . $tok." ".constant($tok). PHP_EOL . $buf;
                    $all_tokens[$tok] = constant($tok);
                }
            }

            $watch_token = false;
        }
    }

    fputs($fo, $buf);
}

if (!feof($fh)) {
    exit("Error: unexpected fgets() fail\n");
}

fclose($fh);
fclose($fo);

if (file_exists($parser_y.'.new')) {
    if (file_exists($parser_y)) {
        unlink($parser_y);
    }
    rename($parser_y.'.new', $parser_y);
}

$fo = fopen('../ext_tokeniz.cpp', "w");

fputs($fo, <<<EOS
/**
 * autogenerated File -- please do not change manually
 */

#include "php.h"
#include "xhp/code_rope.hpp"
#include "xhp/parser.yacc.hpp"

void xhp_tokenizer_register_constants(INIT_FUNC_ARGS) {

EOS
);

foreach(array_keys($all_tokens) as $tok) {
    // NOTE: (substr($tok, 0, 5) == 'T_XHP')
    if ($all_tokens[$tok] === false) {
        fputs($fo, <<<EOS
    REGISTER_LONG_CONSTANT("$tok", $tok, CONST_CS | CONST_PERSISTENT);

EOS
    );
    }
}

fputs($fo, <<<EOS
}

EOS
);

fclose($fo);

//

$fo = fopen('../def_tokeniz.php', "w");
fputs($fo, <<<EOS
<?php
/**
 * autogenerated File -- please do not change manually
 */

if (! extension_loaded('xhp')) {
   exit("Please enable xhp extension");
}

echo '<'."?php".PHP_EOL;
echo "if (extension_loaded('xhp')) return;".PHP_EOL;

EOS
);

foreach(array_keys($all_tokens) as $tok) {
    if ($all_tokens[$tok] === false) {
        fputs($fo, <<<EOS
echo "if (! defined('$tok') )";
echo "\tdefine('$tok', ".$tok.");" . PHP_EOL;

EOS
    );
    }
}
fclose($fo);

